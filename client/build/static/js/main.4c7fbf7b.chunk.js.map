{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","routers/PublicRoute.js","components/ToastMessages.js","components/private/layout/Sidebar.js","components/private/layout/index.js","routers/PrivateRoute.js","components/LoginPage.js","components/private/Dashboard.js","components/private/AddTodo.js","components/Todo.js","components/private/TodoList.js","routers/AppRouter.js","App.js","index.js"],"names":["state","action","type","messages","filter","msg","id","payload","loading","todos","success","message","todo","_id","console","log","data","error","isAuthenticated","authenticated","profile","user","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","response","delete","config","headers","post","Provider","value","getTodos","deleteTodo","addTodo","getAuthState","clearMessage","PublicRoute","Component","component","rest","useContext","useEffect","props","to","ToastMessages","style","position","top","right","zindex","map","Toast","key","background","className","onClose","show","delay","autohide","animation","transition","Fade","Body","icon","faCheckDouble","faTimes","Sidebar","toggled","handleSetToggled","headerContent","src","image","alt","displayName","firstName","onToggle","breakPoint","iconShape","faGem","faPlus","faList","faSignOutAlt","href","Layout","useState","setToggled","minHeight","height","React","Children","child","isValidElement","cloneElement","PrivateRoute","LoginPage","Modal","centered","Header","Title","Button","variant","faGoogle","Dashboard","unfinishedTodos","completed","faBars","onClick","Col","Row","ListGroup","item","Item","text","AddTodo","setText","Container","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","onChange","target","Todo","TodoList","AppRouter","path","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c7fbf7b.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"CLEAR_MESSAGE\":\n      return {\n        ...state,\n        messages: state.messages.filter((msg) => msg.id !== action.payload),\n      };\n    case \"GET_TODOS\":\n      return {\n        ...state,\n        loading: false,\n        todos: action.payload,\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          {\n            success: action.payload.success,\n            message: action.payload.msg,\n            id: action.payload.id,\n          },\n        ],\n        todos: state.todos.filter((todo) => todo._id !== action.payload.id),\n      };\n    case \"ADD_TODO\":\n      console.log(action.payload);\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          {\n            success: action.payload.success,\n            message: action.payload.msg,\n            id: action.payload.data._id,\n          },\n        ],\n        todos: [...state.todos, action.payload.data],\n      };\n    case \"TODO_ERROR\":\n      return {\n        ...state,\n        success: false,\n        error: action.payload,\n      };\n    case \"SET_AUTH_STATE\":\n      return {\n        ...state,\n        isAuthenticated: action.payload.authenticated,\n        todos: action.payload.todos,\n        profile: action.payload.user,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\n// Initial state\nconst initialState = {\n  todos: [],\n  isAuthenticated: false,\n  profile: {},\n  messages: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  // GET auth state\n  async function getAuthState() {\n    try {\n      const res = await axios.get(\"/auth/status\");\n      dispatch({\n        type: \"SET_AUTH_STATE\",\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // GET all todos\n  async function getTodos() {\n    try {\n      const res = await axios.get(\"/api/v1/todos\");\n      dispatch({\n        type: \"GET_TODOS\",\n        payload: res.data.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TODO_ERROR\",\n        payload: err.response.data.error,\n      });\n    }\n  }\n\n  // DELETE by id\n  async function deleteTodo(id) {\n    try {\n      const res = await axios.delete(`/api/v1/todos/${id}`);\n\n      dispatch({\n        type: \"DELETE_TODO\",\n        payload: { ...res.data, id },\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TODO_ERROR\",\n        payload: err.response.data,\n      });\n    }\n  }\n\n  // POST new todo\n  async function addTodo(todo) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/v1/todos\", todo, config);\n\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: \"TODO_ERROR\",\n        payload: err.response.data,\n      });\n    }\n  }\n\n  // Reset message\n  async function clearMessage(id) {\n    dispatch({\n      type: \"CLEAR_MESSAGE\",\n      payload: id,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        todos: state.todos,\n        isAuthenticated: state.isAuthenticated,\n        profile: state.profile,\n        messages: state.messages,\n        getTodos,\n        deleteTodo,\n        addTodo,\n        getAuthState,\n        clearMessage,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, getAuthState } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    getAuthState();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/dashboard\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckDouble, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport Fade from \"react-bootstrap/Fade\";\r\n\r\nexport const ToastMessages = () => {\r\n  const { messages, clearMessage } = useContext(GlobalContext);\r\n\r\n  const handleToastClose = (id) => {\r\n    clearMessage(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: \"absolute\", top: 0, right: 0, zindex: 1 }}>\r\n        {messages.map((msg) => (\r\n          <Toast\r\n            key={msg.id}\r\n            style={{\r\n              background: msg.success ? \"seagreen\" : \"red\",\r\n            }}\r\n            className=\"mt-2 mr-2\"\r\n            onClose={() => handleToastClose(msg.id)}\r\n            show={true}\r\n            delay={5000}\r\n            autohide\r\n            animation\r\n            transition={Fade}\r\n          >\r\n            <Toast.Body>\r\n              <FontAwesomeIcon\r\n                className=\"mr-1\"\r\n                icon={msg.success ? faCheckDouble : faTimes}\r\n              />\r\n              {msg.message}\r\n            </Toast.Body>\r\n          </Toast>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../../context/GlobalState\";\r\n\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SidebarFooter,\r\n  SidebarHeader,\r\n} from \"react-pro-sidebar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGem,\r\n  faSignOutAlt,\r\n  faPlus,\r\n  faList,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sidebar = ({ toggled, handleSetToggled }) => {\r\n  const { profile } = useContext(GlobalContext);\r\n\r\n  const headerContent = (\r\n    <div className=\"d-flex flex-column justify-content-around p-3\">\r\n      <img\r\n        src={profile.image}\r\n        alt={profile.displayName}\r\n        className=\"img-thumbnail rounded p-0 m-auto\"\r\n      />\r\n      <div>\r\n        <h3 className=\"p-2 text-center\">{profile.firstName}!</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ProSidebar toggled={toggled} onToggle={handleSetToggled} breakPoint=\"md\">\r\n      <SidebarHeader>{headerContent}</SidebarHeader>\r\n      <Menu iconShape=\"square\">\r\n        <MenuItem icon={<FontAwesomeIcon icon={faGem} />}>\r\n          Dashboard\r\n          <Link to=\"/dashboard\" />\r\n        </MenuItem>\r\n        <MenuItem icon={<FontAwesomeIcon icon={faPlus} />}>\r\n          Add a ToDo\r\n          <Link to=\"/add\" />\r\n        </MenuItem>\r\n        <MenuItem icon={<FontAwesomeIcon icon={faList} />}>\r\n          All ToDos\r\n          <Link to=\"/todos\" />\r\n        </MenuItem>\r\n      </Menu>\r\n      <SidebarFooter>\r\n        <Menu iconShape=\"square\">\r\n          <MenuItem icon={<FontAwesomeIcon icon={faSignOutAlt} />}>\r\n            <a href=\"/auth/logout\">Logout</a>\r\n          </MenuItem>\r\n        </Menu>\r\n      </SidebarFooter>\r\n    </ProSidebar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport { ToastMessages } from \"../../ToastMessages\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nexport const Layout = ({ children }) => {\r\n  const [toggled, setToggled] = useState(false);\r\n\r\n  const handleSetToggled = (value) => setToggled(value);\r\n\r\n  return (\r\n    <>\r\n      <ToastMessages\r\n        style={{\r\n          position: \"relative\",\r\n          minHeight: \"200px\",\r\n        }}\r\n      />\r\n      <div className=\"d-flex flex-row\" style={{ height: \"100vh\" }}>\r\n        <Sidebar toggled={toggled} handleSetToggled={handleSetToggled} />\r\n        {React.Children.map(children, (child) => {\r\n          // checking isValidElement is the safe way and avoids a typescript error too\r\n          const props = { handleSetToggled };\r\n          if (React.isValidElement(child)) {\r\n            return React.cloneElement(child, props);\r\n          }\r\n          return child;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Layout } from \"../components/private/layout\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, getAuthState } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    getAuthState();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Layout>\r\n            <Component {...props} />\r\n          </Layout>\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport const LoginPage = () => {\r\n  return (\r\n    <Modal centered show>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"text-center\">Login</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body className=\"text-center\">\r\n        <p>Login with Google to organize your life!</p>\r\n        <Button variant=\"outline-primary\" href=\"/auth/google\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"pr-2\">\r\n              <FontAwesomeIcon icon={faGoogle} />\r\n            </div>\r\n            <div>Sign In with Google</div>\r\n          </div>\r\n        </Button>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Dashboard = ({ handleSetToggled }) => {\r\n  const { todos, profile } = useContext(GlobalContext);\r\n  const unfinishedTodos = todos.filter((todo) => todo.completed !== true);\r\n  return (\r\n    <div className=\"w-100\">\r\n      <FontAwesomeIcon\r\n        className=\"d-md-none\"\r\n        icon={faBars}\r\n        onClick={() => handleSetToggled(true)}\r\n      />\r\n      <Col>\r\n        <h2>Welcome {profile.firstName}</h2>\r\n        <h3>Your week at a glance...</h3>\r\n        <Row>\r\n          <Col>\r\n            <ListGroup>\r\n              <h5>Due Today</h5>\r\n              {unfinishedTodos.map((item) => (\r\n                <ListGroup.Item\r\n                  key={item._id}\r\n                  variant={item.completed ? \"success\" : \"\"}\r\n                >\r\n                  {item.text}\r\n                  <Link to={`/todos/${item._id}`}>Edit</Link>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Col>\r\n          <Col>\r\n            <h5>Upcoming</h5>\r\n            <h5>Yet to Complete</h5>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nconst AddTodo = ({ handleSetToggled }) => {\n  const [text, setText] = useState(\"\");\n\n  const { addTodo } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    console.log(\"onsubmit\");\n    e.preventDefault();\n\n    const newTodo = {\n      text,\n    };\n\n    addTodo(newTodo);\n  };\n\n  return (\n    <div className=\"h-100 w-100\">\n      <FontAwesomeIcon\n        className=\"d-md-none\"\n        icon={faBars}\n        onClick={() => handleSetToggled(true)}\n      />\n      <Container>\n        <Form className=\"mx-auto\" onSubmit={onSubmit}>\n          <h4>Add new todo</h4>\n          <Form.Group controlId=\"todoText\">\n            <Form.Label>New ToDo</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a new ToDo...\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\">Add todo</Button>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Todo = ({ todo }) => {\n  const { deleteTodo } = useContext(GlobalContext);\n\n  return (\n    <li>\n      {todo.text}{\" \"}\n      <button onClick={() => deleteTodo(todo._id)} className=\"delete-btn\">\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { Todo } from \"../Todo\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nconst TodoList = ({ handleSetToggled }) => {\n  const { todos } = useContext(GlobalContext);\n\n  return (\n    <div className=\"h-100 w-100\">\n      <FontAwesomeIcon\n        className=\"d-md-none\"\n        icon={faBars}\n        onClick={() => handleSetToggled(true)}\n      />\n      <h3>Everything</h3>\n      <ul className=\"list\">\n        {todos && todos.map((todo) => <Todo key={todo._id} todo={todo} />)}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nimport LoginPage from \"../components/LoginPage\";\r\nimport Dashboard from \"../components/private/Dashboard\";\r\nimport AddTodo from \"../components/private/AddTodo\";\r\nimport TodoList from \"../components/private/TodoList\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <PublicRoute path=\"/\" exact={true} component={LoginPage} />\r\n        <PrivateRoute path=\"/dashboard\" exact={true} component={Dashboard} />\r\n        <PrivateRoute path=\"/add\" component={AddTodo} />\r\n        <PrivateRoute path=\"/todos\" component={TodoList} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport AppRouter from \"./routers/AppRouter\";\n\nimport \"./custom.scss\";\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <AppRouter />\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}